name: Generate Org Stats

on:
  schedule:
    - cron: '0 0 * * *' # –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ –ø–æ–ª–Ω–æ—á—å
  workflow_dispatch:

jobs:
  build-org-stats:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
        uses: actions/checkout@v3

      - name: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        run: |
          sudo apt update && sudo apt install -y jq curl bc

      - name: –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ–± –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å donut chart
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ORG="DiametrEDU"
          curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/orgs/$ORG/repos?per_page=100" > repos.json

          # –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —è–∑—ã–∫–∞–º
          declare -A languages
          for repo in $(jq -r '.[].name' repos.json); do
            curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/$ORG/$repo/languages" > lang.json
            for lang in $(jq -r 'keys[]' lang.json); do
              bytes=$(jq ".\"$lang\"" lang.json)
              ((languages[$lang]+=$bytes))
            done
          done

          total=0
          for lang in "${!languages[@]}"; do
            ((total+=languages[$lang]))
          done

          # –ù–∞–∑–Ω–∞—á–∞–µ–º —Ü–≤–µ—Ç–∞ —è–∑—ã–∫–∞–º
          declare -A colors
          palette=("#e6194b" "#3cb44b" "#ffe119" "#4363d8" "#f58231" "#911eb4" "#46f0f0" "#f032e6" "#bcf60c" "#fabebe" "#008080" "#e6beff")
          i=0
          for lang in "${!languages[@]}"; do
            colors[$lang]=${palette[$((i % ${#palette[@]}))]}
            ((i++))
          done

          polar_to_cartesian() {
            local cx=$1 cy=$2 r=$3 angle=$4
            local rad=$(echo "$angle * 3.14159265 / 180" | bc -l)
            local x=$(echo "$cx + $r * c($rad)" | bc -l)
            local y=$(echo "$cy + $r * s($rad)" | bc -l)
            echo "$x $y"
          }

          echo "<svg width=\"600\" height=\"300\" viewBox=\"0 0 600 300\" xmlns=\"http://www.w3.org/2000/svg\">" > org-stats.svg
          echo "<style>text { font: 14px sans-serif; }</style>" >> org-stats.svg

          # donut
          start_angle=0
          for lang in "${!languages[@]}"; do
            percent=$(echo "scale=5; ${languages[$lang]} / $total" | bc)
            angle=$(echo "$percent * 360" | bc -l)
            end_angle=$(echo "$start_angle + $angle" | bc -l)

            read x1 y1 <<< $(polar_to_cartesian 150 150 100 $start_angle)
            read x2 y2 <<< $(polar_to_cartesian 150 150 100 $end_angle)
            large_arc=$(echo "$angle > 180" | bc)

            echo "<path d=\"M150,150 L$x1,$y1 A100,100 0 $large_arc,1 $x2,$y2 Z\" fill=\"${colors[$lang]}\"/>" >> org-stats.svg

            start_angle=$end_angle
          done

          # –¥—ã—Ä–∫–∞
          echo "<circle cx=\"150\" cy=\"150\" r=\"60\" fill=\"white\"/>" >> org-stats.svg
          echo "<text x=\"150\" y=\"150\" text-anchor=\"middle\" dominant-baseline=\"middle\">DiametrEDU</text>" >> org-stats.svg

          # –ª–µ–≥–µ–Ω–¥–∞
          legend_y=30
          for lang in "${!languages[@]}"; do
            percent=$(echo "scale=1; ${languages[$lang]} * 100 / $total" | bc)
            echo "<rect x=\"300\" y=\"$legend_y\" width=\"12\" height=\"12\" fill=\"${colors[$lang]}\" />" >> org-stats.svg
            echo "<text x=\"320\" y=\"${legend_y_plus=legend_y+11}\">$lang (${percent}%)</text>" >> org-stats.svg
            legend_y=$((legend_y + 20))
          done

          echo "</svg>" >> org-stats.svg

      - name: –ö–æ–º–º–∏—Ç –∏ –ø—É—à SVG
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add org-stats.svg
          git commit -m "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ org-stats.svg (–∫—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞)" || echo "–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π"
          git push
